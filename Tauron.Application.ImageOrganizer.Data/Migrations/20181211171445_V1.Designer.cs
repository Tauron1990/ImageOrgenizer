// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tauron.Application.ImageOrganizer.Data;

namespace Tauron.Application.ImageOrganizer.Data.Migrations
{
    [DbContext(typeof(DatabaseImpl))]
    [Migration("20181211171445_V1")]
    partial class V1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687");

            modelBuilder.Entity("Tauron.Application.ImageOrganizer.Data.Entities.DownloadEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DownloadStade");

                    b.Property<int>("DownloadType");

                    b.Property<int>("FailedCount");

                    b.Property<string>("FailedReason");

                    b.Property<string>("Image");

                    b.Property<string>("Metadata");

                    b.Property<string>("Provider");

                    b.Property<bool>("RemoveImageOnFail");

                    b.Property<DateTime>("Schedule");

                    b.HasKey("Id");

                    b.ToTable("Downloads");
                });

            modelBuilder.Entity("Tauron.Application.ImageOrganizer.Data.Entities.ImageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Added");

                    b.Property<string>("Author");

                    b.Property<bool>("Favorite");

                    b.Property<string>("Name");

                    b.Property<string>("ProviderName");

                    b.Property<int>("RandomCount");

                    b.Property<int>("SortOrder");

                    b.Property<int>("ViewCount");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Tauron.Application.ImageOrganizer.Data.Entities.ImageTag", b =>
                {
                    b.Property<int>("TagEntityId");

                    b.Property<int>("ImageEntityId");

                    b.HasKey("TagEntityId", "ImageEntityId");

                    b.HasIndex("ImageEntityId");

                    b.ToTable("ImageTag");
                });

            modelBuilder.Entity("Tauron.Application.ImageOrganizer.Data.Entities.OptionEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("Tauron.Application.ImageOrganizer.Data.Entities.ProfileEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CurrentImages");

                    b.Property<int>("CurrentPosition");

                    b.Property<bool>("Favorite");

                    b.Property<string>("FilterString");

                    b.Property<string>("Name");

                    b.Property<int>("NextImage");

                    b.Property<string>("PageType");

                    b.HasKey("Id");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("Tauron.Application.ImageOrganizer.Data.Entities.TagEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<string>("TypeId");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("TypeId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Tauron.Application.ImageOrganizer.Data.Entities.TagTypeEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Color");

                    b.HasKey("Id");

                    b.ToTable("TagTypes");
                });

            modelBuilder.Entity("Tauron.Application.ImageOrganizer.Data.Entities.ImageTag", b =>
                {
                    b.HasOne("Tauron.Application.ImageOrganizer.Data.Entities.ImageEntity", "ImageEntity")
                        .WithMany("Tags")
                        .HasForeignKey("ImageEntityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Tauron.Application.ImageOrganizer.Data.Entities.TagEntity", "TagEntity")
                        .WithMany("Images")
                        .HasForeignKey("TagEntityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Tauron.Application.ImageOrganizer.Data.Entities.TagEntity", b =>
                {
                    b.HasOne("Tauron.Application.ImageOrganizer.Data.Entities.TagTypeEntity", "Type")
                        .WithMany("Tags")
                        .HasForeignKey("TypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
